diff --git a/lua/lspfuzzy.lua b/lua/lspfuzzy.lua
index fac5c6c..5fa1c83 100644
--- a/lua/lspfuzzy.lua
+++ b/lua/lspfuzzy.lua
@@ -92,7 +92,7 @@ local function jump(entries)
 
   -- Use the quickfix list to store remaining locations
   if #locations > 1 then
-    vim.lsp.util.set_qflist(vim.lsp.util.locations_to_items(locations, offset_encoding))
+    vim.fn.setqflist(vim.lsp.util.locations_to_items(locations, offset_encoding))
     vim.cmd 'copen'
     vim.cmd 'wincmd p'
   end
@@ -109,6 +109,7 @@ end
 local function build_fzf_opts(label, preview, multi)
   local prompt = fmt('%s> ', label)
   local fzf_opts = {
+    '--layout=reverse-list',
     '--ansi',
     '--delimiter', ':',
     '--keep-right',
@@ -207,7 +208,7 @@ local function diagnostics_cmd(diagnostics)
     severity = diagnostics_fmt[diagnostic.severity]
     table.insert(items, {
       filename = vim.api.nvim_buf_get_name(diagnostic.bufnr),
-      text = fmt('%s[%s]%s %s', severity.ansi, severity.text, ansi.reset, diagnostic.message),
+      text = fmt('%s[%s]%s %s', severity.ansi, severity.text, ansi.reset, diagnostic.message:gsub('[\n\r]', ' ')),
       lnum = diagnostic.lnum + 1,
       col = diagnostic.col + 1,
     })
@@ -315,7 +316,11 @@ return {
     diagnostics_cmd(vim.diagnostic.get(bufnr))
   end,
   diagnostics_all = function()
-    diagnostics_cmd(vim.diagnostic.get())
+    -- all diagnostics from the current client (assumes single client)
+    for id, _ in pairs(vim.lsp.buf_get_clients()) do
+      local ns = vim.lsp.diagnostic.get_namespace(id)
+      return diagnostics_cmd(vim.diagnostic.get(nil, {namespace=ns, severity={min=vim.diagnostic.severity.WARN}}))
+    end
   end,
   last_results = function()
     last_results_cmd()
