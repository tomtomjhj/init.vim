diff --git a/lua/lspfuzzy.lua b/lua/lspfuzzy.lua
index 5b32eb6..26961dc 100644
--- a/lua/lspfuzzy.lua
+++ b/lua/lspfuzzy.lua
@@ -93,6 +93,7 @@ end
 local function build_fzf_opts(label, preview, multi)
   local prompt = fmt('%s> ', label)
   local fzf_opts = {
+    '--layout=reverse-list',
     '--ansi',
     '--delimiter', ':',
     '--keep-right',
@@ -183,6 +184,13 @@ local function make_call_hierarchy_handler(direction)
 end
 
 -------------------- COMMANDS ------------------------------
+local errlist_type_map = {
+  [vim.diagnostic.severity.ERROR] = 'E',
+  [vim.diagnostic.severity.WARN] = 'W',
+  [vim.diagnostic.severity.INFO] = 'I',
+  [vim.diagnostic.severity.HINT] = 'N',
+}
+
 local function diagnostics_cmd(diagnostics)
   local label = 'Diagnostics'
   local items = {}
@@ -190,7 +198,7 @@ local function diagnostics_cmd(diagnostics)
   for _, diagnostic in ipairs(diagnostics) do
     table.insert(items, {
       filename = vim.api.nvim_buf_get_name(diagnostic.bufnr),
-      text = diagnostic.message,
+      text = errlist_type_map[diagnostic.severity] .. ': ' .. diagnostic.message:gsub('[\n\r]', ' '),
       lnum = diagnostic.lnum + 1,
       col = diagnostic.col + 1,
     })
@@ -298,7 +306,11 @@ return {
     diagnostics_cmd(vim.diagnostic.get(bufnr))
   end,
   diagnostics_all = function()
-    diagnostics_cmd(vim.diagnostic.get())
+    -- all diagnostics from the current client (assumes single client)
+    for id, _ in pairs(vim.lsp.buf_get_clients()) do
+      local ns = vim.lsp.diagnostic.get_namespace(id)
+      return diagnostics_cmd(vim.diagnostic.get(nil, {namespace=ns, severity={min=vim.diagnostic.severity.WARN}}))
+    end
   end,
   last_results = function()
     last_results_cmd()
